{"version":3,"sources":["images/eye.svg","images/bug.svg","images/download.svg","images/fork.svg","images/star.svg","routes.js","common/logo/index.js","common/search-form/index.js","common/footer/index.js","home/index.js","common/header/index.js","common/intro/index.js","common/stats/index.js","search/index.js","common/markdown/index.js","repo/index.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","DEFAULT","HOME","SEARCH","REPO","Logo","_ref","size","react_default","a","createElement","Header","className","SearchForm","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","onChange","e","setState","query","target","value","state","_this2","Form","onSubmit","Group","Input","width","name","placeholder","style","margin","Button","fluid","color","type","fontWeight","Component","Footer","format","List","horizontal","Item","href","rel","Home","preventDefault","history","push","navLink","height","Grid","marginTop","marginBottom","Row","centered","logo","Column","as","Container","text","search_form","footer","GlobalHeader","withSearch","Menu","inverted","secondary","react_router_dom","to","routes","position","icon","Intro","marginLeft","isLink","nameWithOwner","src","avatar","alt","owner","dangerouslySetInnerHTML","__html","description","Stats","watchers","stars","downloads","forks","bugs","Image","starImg","eyeImg","downloadImg","bugImg","forkImg","GET_REPO_CURRENT_USER","gql","_templateObject","Search","URLSearchParams","location","search","get","npmResults","Helmet","content","common_header","react_components_esm","variables","data","loading","error","console","log","edges","map","_ref2","node","downloadCount","key","id","common_intro","descriptionHTML","avatarUrl","login","common_stats","totalCount","stargazers","forkCount","issues","Markdown","md","MarkdownIt","injected","html","linkify","highlight","str","lang","hljs","getLanguage","__","use","MarkdownItAnchor","level","slugify","s","toLowerCase","replace","_this$state","fullImgUrl","RegExp","htmlImgUrl","hrefUrl","render","GET_REPO","repo_templateObject","sandboxBaseUrl","Repo","getSandbox","packageJSON","parameters","getParameters","files","index.js","package.json","dependencies","defineProperty","version","url","concat","axios","then","response","sandbox_id","repo","sandboxUrl","isSandboxReady","match","params","repository","readMe","README","readme","githubReadme","common_markdown","title","border","borderRadius","overflow","sandbox","Boolean","window","hostname","httpLink","HttpLink","uri","headers","authorization","process","cache","InMemoryCache","errorLink","onError","operation","graphQLErrors","networkError","client","ApolloClient","link","ApolloLink","from","resolvers","Repository","_args","catch","ReactDOM","react_common_esm","react_router","path","exact","component","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.cb789257.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/eye.04de4817.svg\";","module.exports = __webpack_public_path__ + \"static/media/bug.9056ae55.svg\";","module.exports = __webpack_public_path__ + \"static/media/download.fdaafcb0.svg\";","module.exports = __webpack_public_path__ + \"static/media/fork.9b771578.svg\";","module.exports = __webpack_public_path__ + \"static/media/star.33fb0640.svg\";","export const DEFAULT = '/';\nexport const HOME = '/lib-stack';\nexport const SEARCH = '/lib-stack/search';\nexport const REPO = '/lib-stack/:owner/:repo';","import React from 'react';\nimport { Header } from 'semantic-ui-react';\n\nimport './style.css';\n\nconst Logo = ({size}) => (\n    <Header \n        size={size}\n        className=\"logo\"\n    >\n        <span className=\"first\">Lib</span><span className=\"second\">Stack</span>\n    </Header>\n);\n\nexport default Logo;","import React, {Component} from 'react';\nimport { Form } from 'semantic-ui-react';\n\nclass SearchForm extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            query: props.query,\n        };\n    }\n\n    onChange = e => {\n        this.setState({\n            query: e.target.value,\n        });\n    }\n\n    render() {\n        return (\n            <Form onSubmit={e => this.props.onSubmit(e, this.state.query)}>\n                <Form.Group>\n                    <Form.Input\n                    width={13}\n                    size=\"big\"\n                    name=\"query\"\n                    value={this.state.query}\n                    onChange={this.onChange}\n                    placeholder=\"Search...\"\n                    style={{margin: '1em 0'}}\n                    />\n                    <Form.Button\n                    fluid\n                    width={3}\n                    size=\"big\"\n                    color=\"orange\"\n                    type=\"submit\"\n                    style={{fontWeight: 400, margin: '1em 0'}}>\n                    Search\n                    </Form.Button>\n                </Form.Group>\n            </Form>\n        );\n    }\n}\n\nexport default SearchForm;","import React from 'react'\nimport { List } from 'semantic-ui-react';\n\nconst Footer = ({format}) => (\n    <List horizontal className={\"footer\" + (format ? ' ' + format : '')}>\n        <List.Item className=\"copyright\">© 2019</List.Item>\n        <List.Item className=\"link\">\n            <a href=\"https://twitter.com/MonikKGandhi\" target=\"_blank\" rel=\"noopener noreferrer\">Twitter</a>\n        </List.Item>\n    </List>\n);\n\nexport default Footer;","import React, {Component} from 'react';\nimport { Grid, Header, Container } from 'semantic-ui-react';\nimport Logo from '../common/logo';\nimport SearchForm from '../common/search-form';\nimport Footer from '../common/footer';\n\nimport './index.css';\n\nclass Home extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      query: '',\n      navLink: '/lib-stack/search'\n    };\n  }\n  \n  onSubmit = (e, query) => {\n      e.preventDefault();\n      this.props.history.push(this.state.navLink + \"?query=\" + query);\n  }\n\n  render() {\n    return (\n      <div className=\"main\" style={{height: '100vh'}}>\n        <Grid style={{marginTop: '10vh', marginBottom: '7rem'}}>\n          <Grid.Row centered>\n            <Logo size={'large'} />\n          </Grid.Row>\n          <Grid.Row centered>\n            <Grid.Column width={15} className=\"aligned\">\n              <Header as='h3' className=\"title\">Why search on Github and NPM when you can do both at the same time.</Header>\n            </Grid.Column>\n          </Grid.Row>\n          <Grid.Row centered>\n            <Container text className=\"copy\">\n              <p>With LibStack, you can find what you’re looking for on Github and NPMJS registry in one go. LibStack provides consolidated info from Github and NPMJS along with a better interface to access the repository effectively and run its examples through a coding playground.</p>\n            </Container>\n          </Grid.Row>\n          <Grid.Row centered>\n            <Grid.Column width={14}>\n              <SearchForm onSubmit={this.onSubmit} />\n            </Grid.Column>\n          </Grid.Row>\n        </Grid>\n        <Footer format=\"abs\" />\n      </div>\n    );\n  }\n}\n\nexport default Home;\n","import React from 'react';\nimport { Menu, Input } from 'semantic-ui-react';\nimport { Link } from 'react-router-dom';\n\nimport Logo from '../logo';\nimport * as routes from '../../routes';\n\nimport './index.css';\n\nconst GlobalHeader = ({withSearch}) => (\n    <Menu inverted secondary className=\"thunder global header\">\n        <Menu.Item name=\"home\">\n            <Link to={routes.HOME}><Logo size={'medium'} /></Link>\n        </Menu.Item>\n\n        {withSearch && \n        <Menu.Menu position=\"right\" className=\"search\">\n            <Menu.Item name=\"home\">\n                <Input className=\"search wrapper\" icon=\"search\" placeholder=\"Search Libraries...\" />\n            </Menu.Item>\n        </Menu.Menu>\n        }\n    </Menu>\n);\n\nexport default GlobalHeader;","import React from 'react';\nimport {Link} from 'react-router-dom';\nimport { Header, Container } from 'semantic-ui-react';\n\nimport './index.css';\n\nconst Intro = (props) => (\n    <div style={{ marginLeft: '1rem', marginTop: '1rem' }}>\n        <Container fluid className=\"title\">\n            {props.isLink && \n                <Link to={props.nameWithOwner} className=\"repo link\">\n                    <Header as=\"h2\">{props.name}</Header>\n                </Link>\n            }\n\n            {!props.isLink && \n                <Header as=\"h2\">{props.name}</Header>\n            }\n\n            <Container fluid className=\"profile\">\n                <img className=\"avatar\" src={props.avatar} alt=\"Avatar not found\" />\n                <Header as=\"h5\" className=\"owner\">{props.owner}</Header>\n                <Header as=\"h5\" className=\"version\">published 1.9.0</Header>\n                <Header as=\"h5\" className=\"date\">7 months ago</Header>\n            </Container>\n        </Container>\n        <Container fluid className=\"description\">\n            <p className=\"repo desc\" dangerouslySetInnerHTML={{__html: props.description}}></p>\n        </Container>\n    </div>\n    \n);\n\nexport default Intro;","import React from 'react';\nimport { Image } from 'semantic-ui-react';\n\nimport eyeImg from '../../images/eye.svg';\nimport bugImg from '../../images/bug.svg';\nimport downloadImg from '../../images/download.svg';\nimport forkImg from '../../images/fork.svg';\nimport starImg from '../../images/star.svg';\nimport './index.css';\n\nconst Stats = ({type, watchers, stars, downloads, forks, bugs}) => {\n    return (\n        <div className={\"lib-stats \" + type} style={{ marginLeft: '1rem' }}>\n            <div className=\"statistic\">\n                <div className=\"label\">\n                    <Image src={starImg} />\n                    <span>STARS</span>\n                </div>\n                <span className=\"value\">{stars}</span>\n            </div>\n            <div className=\"statistic\">\n                <div className=\"label\">\n                    <Image src={eyeImg} />\n                    <span>WATCHERS</span>\n                </div>\n                <span className=\"value\">{watchers}</span>\n            </div>\n            <div className=\"statistic\">\n                <div className=\"label\">\n                    <Image src={downloadImg} />\n                    <span>DOWNLOADS</span>\n                </div>\n                <span className=\"value\">{downloads ? downloads : 'N/A'}</span>\n            </div>\n            <div className=\"statistic\">\n                <div className=\"label\">\n                    <Image src={bugImg} />\n                    <span>BUGS</span>\n                </div>\n                <span className=\"value\">{bugs}</span>\n            </div>\n            <div className=\"statistic\">\n                <div className=\"label\">\n                    <Image src={forkImg} />\n                    <span>FORKS</span>\n                </div>\n                <span className=\"value\">{forks}</span>\n            </div>\n        </div>\n    )\n};\n\nexport default Stats;","import React, { Component } from 'react';\nimport {Helmet} from 'react-helmet';\nimport gql from 'graphql-tag';\nimport {Query} from 'react-apollo';\n\nimport {List, Grid} from 'semantic-ui-react';\nimport GlobalHeader from '../common/header';\nimport SearchForm from '../common/search-form';\n\nimport './index.css';\nimport Intro from '../common/intro';\nimport Stats from '../common/stats';\nimport Footer from '../common/footer';\n\nconst GET_REPO_CURRENT_USER = gql`\n  query($query: String!) {\n    search(query: $query, type:REPOSITORY, first: 5) {\n      edges {\n        node {\n          ...on Repository {\n            id\n            name\n            nameWithOwner\n            url\n            descriptionHTML\n            owner {\n              login\n              avatarUrl\n            }\n            watchers {\n              totalCount\n            }\n            forkCount\n            issues {\n              totalCount\n            }\n            stargazers {\n              totalCount\n            }\n            downloadCount @client\n          }\n        }\n      }\n    }\n  }\n`;\n\nclass Search extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      query: new URLSearchParams(props.location.search).get('query'),\n      navLink: '/lib-stack/search',\n      npmResults: [],\n    };\n  }\n\n  onSubmit = (e, query) => {\n    e.preventDefault();\n    this.props.history.push(this.state.navLink + \"?query=\" + query);\n    this.setState({\n      query\n    });\n  }\n\n  render() {\n    return (\n      <Grid>\n        <Helmet>\n          <title>{this.state.query} - LibStack Search</title>\n          <meta name=\"description\"\n                content=\"LibStack search for libraries, repositories and\n                packages.\"/>\n        </Helmet>\n        <Grid.Row>\n          <GlobalHeader />\n        </Grid.Row>\n        <Grid.Row centered className=\"search\">\n          <Grid.Column width={14}>\n            <SearchForm onSubmit={this.onSubmit} query={this.state.query} />\n          </Grid.Column>\n        </Grid.Row>\n        <Query query={GET_REPO_CURRENT_USER} variables={{query: this.state.query}}>\n          {({data, loading, error}) => {\n            if (error) {\n              return <div>Error...</div>\n            }\n\n            if (loading) {\n              return <div>Loading...</div>\n            }\n\n            console.log(data);\n            data = (data.search) ? data : { search: {edges: []} };\n            const { search: { edges } } = data;\n\n            return (\n              <List style={{width: '100%'}}>\n                {edges.map(({node}) => {\n                  const downloads = (node.downloadCount) ? node.downloadCount.downloads : '';\n\n                  return (\n                    <List.Item key={node.id} style={{marginBottom: '3rem'}}>\n                      <Intro \n                        nameWithOwner={node.nameWithOwner}\n                        name={node.name}\n                        description={node.descriptionHTML}\n                        avatar={node.owner.avatarUrl}\n                        owner={node.owner.login}\n                        isLink={true}\n                       />\n                       <Stats \n                          type={'left'}\n                          watchers={node.watchers.totalCount}\n                          stars={node.stargazers.totalCount}\n                          downloads={downloads}\n                          forks={node.forkCount}\n                          bugs={node.issues.totalCount}\n                       />\n                       {/* <a href={node.url} target=\"_blank\" rel=\"noopener noreferrer\">Github</a> */}\n                    </List.Item>\n                  );\n                })}\n              </List>\n            );\n          }}\n        </Query>\n        <Footer />\n      </Grid>\n    );\n  }\n}\n\nexport default Search;\n","import React, {Component} from 'react';\nimport MarkdownIt from 'markdown-it';\nimport MarkdownItAnchor from 'markdown-it-anchor';\nimport hljs from 'highlight.js';\n\nimport './atelier-seaside-light.min.css';\nimport './index.css';\nimport { Container } from 'semantic-ui-react';\n\nclass Markdown extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            data: props.data,\n            nameWithOwner: props.nameWithOwner,\n        };\n        this.md = new MarkdownIt('default', {\n            injected: true,\n            html: true,\n            linkify: true,\n            highlight: (str, lang) => {\n                if (lang && hljs.getLanguage(lang)) {\n                    try {\n                        return hljs.highlight(lang, str).value;\n                    } catch(__) {}\n                }\n                return '';\n            }\n        });\n        this.md.use(MarkdownItAnchor, {\n            level: [1, 2, 3, 4],\n            slugify: s => s.toLowerCase().replace(/ /g,'-').replace(/[^\\w-]+/g,'')\n        });\n    }\n\n    render() {\n        let {data, nameWithOwner} = this.state;\n        const fullImgUrl = new RegExp(/(https:\\/\\/github\\.com\\/)([a-zA-Z0-9\\-_/]*)(blob)([a-zA-Z0-9\\-_/]*)(\\.(gif|jpeg|jpg|png))/, 'gm');\n        const htmlImgUrl = new RegExp(/(src=\")([\\w\\d-/]*)(\\.(gif|jpeg|jpg|png)(\\?[\\w\\d&=]*)?\")/, 'gm');\n        const hrefUrl = new RegExp(/(href=\")([^#https][\\w\\d-/.]*)/, 'gm');\n\n        data = data.replace(fullImgUrl, '$1$2raw$4$5');\n        console.log(data);\n\n        let html = this.md.render(data);\n        html = html.replace(htmlImgUrl, '$1https://github.com/' + nameWithOwner + '/raw/master/$2$3');\n        html = html.replace(hrefUrl, '$1https://github.com/' + nameWithOwner + '/blob/master$2');\n\n        return (\n            <Container fluid className=\"readme\" dangerouslySetInnerHTML={{__html: html}}>\n            </Container>\n        );\n    }\n}\n\nexport default Markdown;","import React, {Component} from 'react';\nimport {Helmet} from 'react-helmet';\nimport gql from 'graphql-tag';\nimport {Query} from 'react-apollo';\nimport axios from 'axios';\nimport {getParameters} from 'codesandbox/lib/api/define';\n\nimport GlobalHeader from '../common/header';\nimport Intro from '../common/intro';\nimport Stats from '../common/stats';\nimport Markdown from '../common/markdown';\n\nconst GET_REPO = gql`\n  query ($owner:String!, $name:String!) {\n    repository(owner:$owner, name:$name) {\n      id\n      name\n      nameWithOwner\n      url\n      descriptionHTML\n      owner {\n        login\n        avatarUrl\n      }\n      watchers {\n        totalCount\n      }\n      forkCount\n      issues {\n        totalCount\n      }\n      stargazers {\n        totalCount\n      }\n      downloadCount @client\n      defaultBranchRef {\n        name\n      }\n      tree: object(expression: \"HEAD:\") {\n        ...on Tree {\n          entries {\n            oid\n            name\n          }\n        }\n      }\n      packageJSON:  object(expression: \"HEAD:package.json\") {\n        ...on Blob {\n          text\n        }\n      }\n      README:  object(\n        expression: \"HEAD:README.md\") {\n        ...on Blob {\n          text\n        }\n      }\n      readme: object(\n        expression: \"HEAD:readme.md\") {\n        ...on Blob {\n          text\n        }\n      }\n      githubReadme: object(\n        expression: \"HEAD:.github/readme.md\") {\n        ...on Blob {\n          text\n        }\n      }\n    }\n  }\n`;\n\nconst sandboxBaseUrl = `https://codesandbox.io/api/v1/sandboxes/define`;\n\nclass Repo extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      owner: props.match.params.owner,\n      repo: props.match.params.repo,\n      sandboxUrl: 'https://codesandbox.io/embed/',\n      isSandboxReady: false,\n    };\n  }\n\n  getSandbox = (packageJSON) => {\n    console.log(packageJSON);\n    const parameters = getParameters({\n      files: {\n        \"index.js\": {\n          content: \"const \" + packageJSON.name + \" = require('\" + packageJSON.name + \"');\"\n        },\n        \"package.json\": {\n          content: { \n            dependencies: {\n              [packageJSON.name]: \"^\" + packageJSON.version,\n            } \n          }\n        }\n      }\n    });\n\n    const url = sandboxBaseUrl + `?parameters=${parameters}&json=1`;\n\n    axios.get(url)\n      .then(response => {\n        console.log(response.data.sandbox_id);\n        this.setState({\n          owner: this.state.owner,\n          repo: this.state.repo,\n          sandboxUrl: this.state.sandboxUrl + response.data.sandbox_id,\n          isSandboxReady: true,\n        });\n      });\n  }\n\n  render() {\n   const { sandboxUrl, isSandboxReady } = this.state;\n\n    return (\n      <div className=\"App\">\n        <Helmet>\n          <title>{this.state.owner}/{this.state.repo} - LibStack</title>\n          <meta name=\"description\"\n                content=\"Github repo description\"/>\n        </Helmet>\n        <GlobalHeader withSearch={true} />\n        <Query\n          query={GET_REPO}\n          variables={{owner: this.state.owner, name: this.state.repo}}\n        >\n          {({data, loading, error}) => {\n            if (error) {\n              return <div>Error...</div>\n            }\n\n            if (loading) {\n              return <div>Loading...</div>\n            }\n\n            const { repository } = data;\n            console.log(repository);\n\n            // if (!isSandboxReady) {\n            //   console.log(repository);\n            //   this.getSandbox(JSON.parse(repository.packageJSON.text));\n            // }\n\n            const downloads = (repository.downloadCount) ? repository.downloadCount.downloads : '';\n            let readMe = repository.README || repository.readme || repository.githubReadme;\n            \n            return (\n              <div>\n                <Intro \n                  nameWithOwner={repository.nameWithOwner}\n                  name={repository.name}\n                  description={repository.descriptionHTML}\n                  avatar={repository.owner.avatarUrl}\n                  owner={repository.owner.login}\n                  isLink={false}\n                />\n                <Stats \n                  type={'left'}\n                  watchers={repository.watchers.totalCount}\n                  stars={repository.stargazers.totalCount}\n                  downloads={downloads}\n                  forks={repository.forkCount}\n                  bugs={repository.issues.totalCount}\n                />\n                { readMe && readMe.text && \n                  <Markdown\n                    nameWithOwner={repository.nameWithOwner}\n                    data={readMe.text}\n                  />\n                }\n              </div>\n            );\n          }}\n        </Query>\n\n        {isSandboxReady &&\n        <iframe\n          src={sandboxUrl}\n          title=\"Code Example\"\n          style={{\n            width:'100%',\n            height: '500px',\n            border: '0',\n            borderRadius: '4px',\n            overflow: 'hidden',\n          }}\n          sandbox=\"allow-modals allow-forms allow-popups allow-scripts allow-same-origin\"\n        />}\n      </div>\n    );\n  }\n}\n\nexport default Repo;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. Home is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router, Route, Redirect } from 'react-router-dom';\nimport * as routes from './routes';\nimport axios from 'axios';\n\nimport { ApolloClient } from 'apollo-client';\nimport { HttpLink } from 'apollo-link-http';\nimport { InMemoryCache } from 'apollo-cache-inmemory';\nimport { ApolloProvider } from 'react-apollo';\nimport {onError} from 'apollo-link-error';\n\nimport 'semantic-ui-css/semantic.min.css';\nimport './index.css';\n\nimport Home from './home';\nimport Search from './search';\nimport Repo from './repo';\n\nimport * as serviceWorker from './serviceWorker';\nimport { ApolloLink } from 'apollo-link';\n\nconst GITHUB_BASE_URL = 'https://api.github.com/graphql';\n\nconst httpLink = new HttpLink({\n  uri: GITHUB_BASE_URL,\n  headers: {\n    authorization: `Bearer ${process.env.REACT_APP_GITHUB_PERSONAL_ACCESS_TOKEN}`,\n  },\n});\n\nconst cache = new InMemoryCache();\n\nconst errorLink = onError(({operation, response, graphQLErrors, networkError}) => {\n  if (graphQLErrors) {\n    console.log('GraphQL Error: ', graphQLErrors);\n  }\n\n  if (networkError) {\n    console.log('Network Error: ', networkError, operation, response);\n  }\n\n  console.log('Operation: ', operation);\n  console.log('Response: ', response);\n});\n\nconst client = new ApolloClient({\n  cache,\n  link: ApolloLink.from([errorLink, httpLink]),\n  resolvers: {\n    Repository: {\n      downloadCount: (repo, _args, { cache }) => {\n        return axios\n          .get('https://api.npmjs.org/downloads/point/last-week/' + repo.name)\n          .then(response => response.data)\n          .catch(error => {\n            return null;\n          });\n      },\n    },\n  },\n});\n\nfunction App() {\n  return (\n    <ApolloProvider client={client}>\n      <Router>\n        <Route path={routes.DEFAULT} exact render={() => (<Redirect to={routes.HOME} />)} />\n        <Route path={routes.HOME} exact component={Home} />\n        <Route path={routes.SEARCH} component={Search} />\n        <Route path={routes.REPO} component={Repo} />\n      </Router>\n    </ApolloProvider>\n  );\n}\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}